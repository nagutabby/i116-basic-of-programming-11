from parse_tree import *
x = VariableParseTree('x')
y = VariableParseTree('y')
r = VariableParseTree('r')
f = VariableParseTree('f')

number_119 = NumberParseTree(119)
number_2 = NumberParseTree(2)
number_1 = NumberParseTree(1)
number_0 = NumberParseTree(0)

assignment1 = AssignmentParseTree(x, number_119)
assignment2 = AssignmentParseTree(y, number_2)
assignment3 = AssignmentParseTree(r, number_1)
assignment4 = AssignmentParseTree(f, number_1)
assignment5 = AssignmentParseTree(r, number_0)
assignment6 = AssignmentParseTree(f, number_0)
sequential_composition1 = SequentialCompositionParseTree(assignment1, assignment2)
sequential_composition2 = SequentialCompositionParseTree(sequential_composition1, assignment3)
sequential_composition3 = SequentialCompositionParseTree(sequential_composition2, assignment4)
expression1 = RemainderParseTree(x, y)
expression2 = EqualsParseTree(expression1, number_0)
expression3 = AdditionParseTree(y, number_1)
expression4 = EqualsParseTree(x, y)
empty_statement = EmptyParseTree()
if2 = IfParseTree(expression4, assignment6, empty_statement)
sequential_composition4 = SequentialCompositionParseTree(assignment6, assignment5)
assignment7 = AssignmentParseTree(y, expression3)
if1 = IfParseTree(expression2, sequential_composition4, assignment7)
sequential_composition5 = SequentialCompositionParseTree(if1, if2)
while1 = WhileParseTree(f, sequential_composition5)
program = SequentialCompositionParseTree(sequential_composition3, while1)
print(sequential_composition3)
print(while1)
print(program)
